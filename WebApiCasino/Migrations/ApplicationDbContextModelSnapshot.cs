// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiCasino;

#nullable disable

namespace WebApiCasino.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParticipanteRifa", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("RifaId")
                        .HasColumnType("int");

                    b.HasKey("ParticipanteId", "RifaId");

                    b.HasIndex("RifaId");

                    b.ToTable("ParticipanteRifa");
                });

            modelBuilder.Entity("PremioRifa", b =>
                {
                    b.Property<int>("PremioId")
                        .HasColumnType("int");

                    b.Property<int>("RifaId")
                        .HasColumnType("int");

                    b.HasKey("PremioId", "RifaId");

                    b.HasIndex("RifaId");

                    b.ToTable("PremioRifa");
                });

            modelBuilder.Entity("WebApiCasino.Entidades.Carta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int?>("RifaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("RifaId");

                    b.ToTable("Cartas");
                });

            modelBuilder.Entity("WebApiCasino.Entidades.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("WebApiCasino.Entidades.Premio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Premio");
                });

            modelBuilder.Entity("WebApiCasino.Entidades.Rifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rifas");
                });

            modelBuilder.Entity("ParticipanteRifa", b =>
                {
                    b.HasOne("WebApiCasino.Entidades.Participante", null)
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiCasino.Entidades.Rifa", null)
                        .WithMany()
                        .HasForeignKey("RifaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PremioRifa", b =>
                {
                    b.HasOne("WebApiCasino.Entidades.Premio", null)
                        .WithMany()
                        .HasForeignKey("PremioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiCasino.Entidades.Rifa", null)
                        .WithMany()
                        .HasForeignKey("RifaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiCasino.Entidades.Carta", b =>
                {
                    b.HasOne("WebApiCasino.Entidades.Participante", null)
                        .WithMany("Carta")
                        .HasForeignKey("ParticipanteId");

                    b.HasOne("WebApiCasino.Entidades.Rifa", null)
                        .WithMany("Carta")
                        .HasForeignKey("RifaId");
                });

            modelBuilder.Entity("WebApiCasino.Entidades.Premio", b =>
                {
                    b.HasOne("WebApiCasino.Entidades.Participante", null)
                        .WithMany("Premio")
                        .HasForeignKey("ParticipanteId");
                });

            modelBuilder.Entity("WebApiCasino.Entidades.Participante", b =>
                {
                    b.Navigation("Carta");

                    b.Navigation("Premio");
                });

            modelBuilder.Entity("WebApiCasino.Entidades.Rifa", b =>
                {
                    b.Navigation("Carta");
                });
#pragma warning restore 612, 618
        }
    }
}
